{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Documentaci\u00f3n de Cacao Accounting Esta es la gu\u00eda para personas interesadas es instalar Cacao Accounting, para usuarios favor revisar el manual de usuario .","title":"Inicio"},{"location":"#documentacion-de-cacao-accounting","text":"Esta es la gu\u00eda para personas interesadas es instalar Cacao Accounting, para usuarios favor revisar el manual de usuario .","title":"Documentaci\u00f3n de Cacao Accounting"},{"location":"despliegue/","text":"Instalacion Existen varias formas de desplegar Cacao Accounting Entorno Virtual de Python Para instalar Cacao Accounting desde las fuentes requiere git , yarn y python . git clone https://github.com/cacao-accounting/cacao-accounting.git cd cacao-accounting python3 -m venv venv # Windows: .\\venv\\Scripts\\activate.bat # Linux y MAC: source venv/bin/activate python -m pip install -r requirements.txt python setup.py install yarn Se puede verificar si la instalaci\u00f3n fue correcta ejecutando: cacaoctl Usage: python -m flask [OPTIONS] COMMAND [ARGS]... Interfaz de linea de comandos para la administraci\u00f3n de Cacao Accounting. Options: --version Show the flask version --help Show this message and exit. Commands: cleandb Elimina la base de datos, solo disponible para... db Perform database migrations. initdb Crea el esquema de la base de datos. routes Show the routes for the app. run Run a development server. serve Inicio la aplicacion con waitress como servidor... shell Run a shell in the app context. Existe una entrada en pypi para el proyecto donde periodicamente se publican los avances del proyecto. Cacao Accounting es software en desarrollo no apto a\u00fan para su uso en producci\u00f3n. Docker Existe una imagen de imagen de contenedor disponible para ejecutar la aplicaci\u00f3n en: https://quay.io/repository/cacaoaccounting/cacaoaccounting En este ejemplo usaremos podman pero los comandos son equivalentes usando moby (docker): podman pull quay.io/cacaoaccounting/cacaoaccounting podman images REPOSITORY TAG IMAGE ID CREATED SIZE docker.io/cacaoaccounting/cacaoaccounting latest a25d0896a2ab 22 hours ago 193 MB podman run -name cacao -d -p 8080:8080 cacaoaccounting/cacaoaccountin podman ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES e70999f0cd83 docker.io/cacaoaccounting/cacaoaccounting:latest /app/entrypoint.s... 28 seconds ago Up 28 seconds ago 0.0.0.0:8070->8080/tcp cacao Systemd En sistemas Linux systemd se ha vuelto la implementaci\u00f3n predominante para el arranque del sistema operativo, systemd utiliza archivos .unit para describir los procesos a iniciar en el arranque del sistema operativa. Para su conveniencia proveemos una plantilla de archivo .unit para utilizarla en el despliegue de Cacao Accounting. El archivo .unit se debe colocar en: /etc/systemd/system/cacao-accounting.service Es importante editar las rutas al ejecutable cacaoctl, al aplicaci\u00f3n se puede administrar con: systemctl daemon-reload systemctl enable cacao-accounting.service --now Usando el unit file sin permisos de root Si no tiene acceso de administrador al sistema aun puede utilizar systemd para administrar Cacoa Accounting, debe colocar en archivo .unit en: ~/.config/systemd/user/cacao-accounting.service Puede administrar el servicio con: systemctl --user daemon-reload systemctl --user start cacao-accounting systemctl --user status cacao-accounting \u25cf cacao-accounting.service - Cacao Accounting WSGI server Loaded: loaded (/home/wmoreno/.config/systemd/user/cacao-accounting.service; disabled; vendor preset: disabled) Active: active (running) since Sun 2020-11-01 15:12:52 CST; 5s ago Main PID: 5471 (cacaoctl) Tasks: 5 (limit: 3991) Memory: 44.2M CPU: 656ms CGroup: /user.slice/user-1000.slice/user@1000.service/cacao-accounting.service \u2514\u25005471 /home/wmoreno/Documentos/repositorios/cacao/venv/bin/python /home/wmoreno/Documentos/repositorios/cacao/venv/bin/cacaoctl serve nov 01 15:12:52 thanos systemd[2002]: Started Cacao Accounting WSGI server. nov 01 15:12:53 thanos cacaoctl[5471]: 2020-11-01 15:12:53.798 | INFO | cacao_accounting.__main__:run:34 - Iniciando servidor WSGI en puerto 8080 nov 01 15:12:53 thanos cacaoctl[5471]: 2020-11-01T15:12:53.798290-0600 INFO Iniciando servidor WSGI en puerto 8080 systemctl --user stop cacao-accounting Configurar un servidor web Cacao Accounting utiliza waitress como servidor WSGI, no es recomendable exponer el servidor de aplicaciones directamente a la WEB, waitress puede ser utilizado en redes privadas con pocos usuarios, para servir a un gran n\u00famero de usuarios o utilizar en un servidor p\u00fablico se recomienda utilizar nginx como proxy y para servir contenido estatico a los usuarios.","title":"Instalaci\u00f3n"},{"location":"despliegue/#instalacion","text":"Existen varias formas de desplegar Cacao Accounting","title":"Instalacion"},{"location":"despliegue/#entorno-virtual-de-python","text":"Para instalar Cacao Accounting desde las fuentes requiere git , yarn y python . git clone https://github.com/cacao-accounting/cacao-accounting.git cd cacao-accounting python3 -m venv venv # Windows: .\\venv\\Scripts\\activate.bat # Linux y MAC: source venv/bin/activate python -m pip install -r requirements.txt python setup.py install yarn Se puede verificar si la instalaci\u00f3n fue correcta ejecutando: cacaoctl Usage: python -m flask [OPTIONS] COMMAND [ARGS]... Interfaz de linea de comandos para la administraci\u00f3n de Cacao Accounting. Options: --version Show the flask version --help Show this message and exit. Commands: cleandb Elimina la base de datos, solo disponible para... db Perform database migrations. initdb Crea el esquema de la base de datos. routes Show the routes for the app. run Run a development server. serve Inicio la aplicacion con waitress como servidor... shell Run a shell in the app context. Existe una entrada en pypi para el proyecto donde periodicamente se publican los avances del proyecto. Cacao Accounting es software en desarrollo no apto a\u00fan para su uso en producci\u00f3n.","title":"Entorno Virtual de Python"},{"location":"despliegue/#docker","text":"Existe una imagen de imagen de contenedor disponible para ejecutar la aplicaci\u00f3n en: https://quay.io/repository/cacaoaccounting/cacaoaccounting En este ejemplo usaremos podman pero los comandos son equivalentes usando moby (docker): podman pull quay.io/cacaoaccounting/cacaoaccounting podman images REPOSITORY TAG IMAGE ID CREATED SIZE docker.io/cacaoaccounting/cacaoaccounting latest a25d0896a2ab 22 hours ago 193 MB podman run -name cacao -d -p 8080:8080 cacaoaccounting/cacaoaccountin podman ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES e70999f0cd83 docker.io/cacaoaccounting/cacaoaccounting:latest /app/entrypoint.s... 28 seconds ago Up 28 seconds ago 0.0.0.0:8070->8080/tcp cacao","title":"Docker"},{"location":"despliegue/#systemd","text":"En sistemas Linux systemd se ha vuelto la implementaci\u00f3n predominante para el arranque del sistema operativo, systemd utiliza archivos .unit para describir los procesos a iniciar en el arranque del sistema operativa. Para su conveniencia proveemos una plantilla de archivo .unit para utilizarla en el despliegue de Cacao Accounting. El archivo .unit se debe colocar en: /etc/systemd/system/cacao-accounting.service Es importante editar las rutas al ejecutable cacaoctl, al aplicaci\u00f3n se puede administrar con: systemctl daemon-reload systemctl enable cacao-accounting.service --now","title":"Systemd"},{"location":"despliegue/#usando-el-unit-file-sin-permisos-de-root","text":"Si no tiene acceso de administrador al sistema aun puede utilizar systemd para administrar Cacoa Accounting, debe colocar en archivo .unit en: ~/.config/systemd/user/cacao-accounting.service Puede administrar el servicio con: systemctl --user daemon-reload systemctl --user start cacao-accounting systemctl --user status cacao-accounting \u25cf cacao-accounting.service - Cacao Accounting WSGI server Loaded: loaded (/home/wmoreno/.config/systemd/user/cacao-accounting.service; disabled; vendor preset: disabled) Active: active (running) since Sun 2020-11-01 15:12:52 CST; 5s ago Main PID: 5471 (cacaoctl) Tasks: 5 (limit: 3991) Memory: 44.2M CPU: 656ms CGroup: /user.slice/user-1000.slice/user@1000.service/cacao-accounting.service \u2514\u25005471 /home/wmoreno/Documentos/repositorios/cacao/venv/bin/python /home/wmoreno/Documentos/repositorios/cacao/venv/bin/cacaoctl serve nov 01 15:12:52 thanos systemd[2002]: Started Cacao Accounting WSGI server. nov 01 15:12:53 thanos cacaoctl[5471]: 2020-11-01 15:12:53.798 | INFO | cacao_accounting.__main__:run:34 - Iniciando servidor WSGI en puerto 8080 nov 01 15:12:53 thanos cacaoctl[5471]: 2020-11-01T15:12:53.798290-0600 INFO Iniciando servidor WSGI en puerto 8080 systemctl --user stop cacao-accounting","title":"Usando el unit file sin permisos de root"},{"location":"despliegue/#configurar-un-servidor-web","text":"Cacao Accounting utiliza waitress como servidor WSGI, no es recomendable exponer el servidor de aplicaciones directamente a la WEB, waitress puede ser utilizado en redes privadas con pocos usuarios, para servir a un gran n\u00famero de usuarios o utilizar en un servidor p\u00fablico se recomienda utilizar nginx como proxy y para servir contenido estatico a los usuarios.","title":"Configurar un servidor web"}]}