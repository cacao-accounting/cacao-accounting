{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Documentaci\u00f3n de Cacao Accounting Esta es la gu\u00eda para personas interesadas es instalar Cacao Accounting, para usuarios favor revisar el manual de usuario .","title":"Inicio"},{"location":"#documentacion-de-cacao-accounting","text":"Esta es la gu\u00eda para personas interesadas es instalar Cacao Accounting, para usuarios favor revisar el manual de usuario .","title":"Documentaci\u00f3n de Cacao Accounting"},{"location":"configuracion/","text":"Configuraci\u00f3n de la aplicaci\u00f3n: Siguiendo las recomendaciones en the twelve factor app Cacao Accounting puede leer la configuraci\u00f3n desde variables del entorno: Establecer varaibles del entorno requeridas: En Linux se puede configurar Cacao Accounting ejecutando: # Para configurar Cacao Accounting en Linux ejecutar: export CACAO_ACCOUNTING=True export CACAO_DB=DATABASE_CONNECTION_URI En Windows ejecutar: setx CACAO_ACCOUNTING \"True\" setx CACAO_DB \"DATABASE_CONNECTION_URI\" En un Dockerfile o en un archivo Docker compose se pueden configurar de la siguiente forma: ENV CACAO_ACCOUNTING=True ENV CACAO_DB=DATABASE_CONNECTION_URI Conexion a la base de datos Cacao Accounting puede funcionar con SQLite, MySQL, Postgresql y MS SQL Server: SQLite: No se requiere software adicional para trabajar con SQLite, sin embargo no se recomienda para entornos multi usuarios: La linea de conecci\u00f3n es por ejemplo: sqlite://cacaoaccounting.db MySQL: Para funcionar con MySQL asegurece de tener instalado el driver apropiado: pip install pymysql La linea de conecci\u00f3n es por ejemplo: mysql+pymysql://ususario:contrase\u00f1a@servidor:puerto/database mysql+pymysql://cacao:cacao@localhost:3306/cacao Postgresql: Para funcionar con Postgresql asegurece de tener instalado el driver apropiado: pip install psycopg2-binary La linea de conecci\u00f3n es por ejemplo: postgresql+psycopg2://usuario:contrase\u00f1a@servidor:puerto/database postgresql+psycopg2://cacao:cacao@localhost:5432/cacao MS SQL Server: Para funcionar con MS SQL Server asegurece de tener instalado el driver de python apropiado, adicionalmente debe configurar el cliente de ODBC para su sistema operativo . pip install pyodbc La linea de conecci\u00f3n es por ejemplo: mssql+pyodbc://usuario:contrase\u00f1a@servidor:puerto/database?driver=DRIVER mssql+pyodbc://SA:cacao+SQLSERVER2019@localhost:1433/cacao?driver=ODBC+Driver+17+for+SQL+Server En el ejemplo anterior se usa la version 17 del cliente ODBS para SQL Server","title":"Configuraci\u00f3n"},{"location":"configuracion/#configuracion-de-la-aplicacion","text":"Siguiendo las recomendaciones en the twelve factor app Cacao Accounting puede leer la configuraci\u00f3n desde variables del entorno:","title":"Configuraci\u00f3n de la aplicaci\u00f3n:"},{"location":"configuracion/#establecer-varaibles-del-entorno-requeridas","text":"En Linux se puede configurar Cacao Accounting ejecutando: # Para configurar Cacao Accounting en Linux ejecutar: export CACAO_ACCOUNTING=True export CACAO_DB=DATABASE_CONNECTION_URI En Windows ejecutar: setx CACAO_ACCOUNTING \"True\" setx CACAO_DB \"DATABASE_CONNECTION_URI\" En un Dockerfile o en un archivo Docker compose se pueden configurar de la siguiente forma: ENV CACAO_ACCOUNTING=True ENV CACAO_DB=DATABASE_CONNECTION_URI","title":"Establecer varaibles del entorno requeridas:"},{"location":"configuracion/#conexion-a-la-base-de-datos","text":"Cacao Accounting puede funcionar con SQLite, MySQL, Postgresql y MS SQL Server:","title":"Conexion a la base de datos"},{"location":"configuracion/#sqlite","text":"No se requiere software adicional para trabajar con SQLite, sin embargo no se recomienda para entornos multi usuarios: La linea de conecci\u00f3n es por ejemplo: sqlite://cacaoaccounting.db","title":"SQLite:"},{"location":"configuracion/#mysql","text":"Para funcionar con MySQL asegurece de tener instalado el driver apropiado: pip install pymysql La linea de conecci\u00f3n es por ejemplo: mysql+pymysql://ususario:contrase\u00f1a@servidor:puerto/database mysql+pymysql://cacao:cacao@localhost:3306/cacao","title":"MySQL:"},{"location":"configuracion/#postgresql","text":"Para funcionar con Postgresql asegurece de tener instalado el driver apropiado: pip install psycopg2-binary La linea de conecci\u00f3n es por ejemplo: postgresql+psycopg2://usuario:contrase\u00f1a@servidor:puerto/database postgresql+psycopg2://cacao:cacao@localhost:5432/cacao","title":"Postgresql:"},{"location":"configuracion/#ms-sql-server","text":"Para funcionar con MS SQL Server asegurece de tener instalado el driver de python apropiado, adicionalmente debe configurar el cliente de ODBC para su sistema operativo . pip install pyodbc La linea de conecci\u00f3n es por ejemplo: mssql+pyodbc://usuario:contrase\u00f1a@servidor:puerto/database?driver=DRIVER mssql+pyodbc://SA:cacao+SQLSERVER2019@localhost:1433/cacao?driver=ODBC+Driver+17+for+SQL+Server En el ejemplo anterior se usa la version 17 del cliente ODBS para SQL Server","title":"MS SQL Server:"},{"location":"database/","text":"Configuraci\u00f3n de la base de datos. Cacao Accounting requiere acceso a una base de datos para almacencer los registros que se ingresan en la aplicacion, la configuraci\u00f3n de una linea de conecci\u00f3n en la principal opci\u00f3n de configuraci\u00f3n que requiere el sistema. En general configurar la base de datos para uso en Cacao Accounting requiere: Instalar e iniciar el motor de base de datos seleccionado. Crear un usuario distinto del usuario principal para acceder a la base de datos. Crear una base de datos. Dar acceso al usuario especificado a la base datos que acabamos de crear. En los ejemplos siguientes recomendamos utilizar nombres y contrase\u00f1as distintos a los usados de ejemplo. SQLite No se requiere pasos previos para utilizar SQLite como motor de base de datos. MySQL: Una vez instalado MySQL puede ejecutar las siguientes sentencias SQL para crear la base de datos: CREATE DATABASE IF NOT EXISTS cacao; CREATE USER IF NOT EXISTS 'cacao' IDENTIFIED BY 'cacao'; GRANT ALL PRIVILEGES ON cacao.* TO 'cacao'; FLUSH PRIVILEGES; Postgresql: Una vez instalado Postgresql puede ejeutar las siguientes sentencias SQL para crear la base de datos: CREATE DATABASE cacao; CREATE USER cacao WITH PASSWORD 'cacao'; GRANT ALL PRIVILEGES ON DATABASE cacao TO cacao; MS SQL Server Una vez instalado MS SQL Server puede ejecitar las siguientes setencias SQL para crear la base de datos: USE master; GO CREATE DATABASE cacao; GO CREATE LOGIN cacao WITH PASSWORD = 'cacao'; GO CREATE USER cacaouser login cacao; GO USE cacao; GO GRANT ALL ON dbo.cacao TO cacaouser; GO","title":"Configuraci\u00f3n de Base de Datos"},{"location":"database/#configuracion-de-la-base-de-datos","text":"Cacao Accounting requiere acceso a una base de datos para almacencer los registros que se ingresan en la aplicacion, la configuraci\u00f3n de una linea de conecci\u00f3n en la principal opci\u00f3n de configuraci\u00f3n que requiere el sistema. En general configurar la base de datos para uso en Cacao Accounting requiere: Instalar e iniciar el motor de base de datos seleccionado. Crear un usuario distinto del usuario principal para acceder a la base de datos. Crear una base de datos. Dar acceso al usuario especificado a la base datos que acabamos de crear. En los ejemplos siguientes recomendamos utilizar nombres y contrase\u00f1as distintos a los usados de ejemplo.","title":"Configuraci\u00f3n de la base de datos."},{"location":"database/#sqlite","text":"No se requiere pasos previos para utilizar SQLite como motor de base de datos.","title":"SQLite"},{"location":"database/#mysql","text":"Una vez instalado MySQL puede ejecutar las siguientes sentencias SQL para crear la base de datos: CREATE DATABASE IF NOT EXISTS cacao; CREATE USER IF NOT EXISTS 'cacao' IDENTIFIED BY 'cacao'; GRANT ALL PRIVILEGES ON cacao.* TO 'cacao'; FLUSH PRIVILEGES;","title":"MySQL:"},{"location":"database/#postgresql","text":"Una vez instalado Postgresql puede ejeutar las siguientes sentencias SQL para crear la base de datos: CREATE DATABASE cacao; CREATE USER cacao WITH PASSWORD 'cacao'; GRANT ALL PRIVILEGES ON DATABASE cacao TO cacao;","title":"Postgresql:"},{"location":"database/#ms-sql-server","text":"Una vez instalado MS SQL Server puede ejecitar las siguientes setencias SQL para crear la base de datos: USE master; GO CREATE DATABASE cacao; GO CREATE LOGIN cacao WITH PASSWORD = 'cacao'; GO CREATE USER cacaouser login cacao; GO USE cacao; GO GRANT ALL ON dbo.cacao TO cacaouser; GO","title":"MS SQL Server"},{"location":"despliegue/","text":"Instalacion Existen varias formas de desplegar Cacao Accounting, basicamente Cacao Accounting es una aplicaci\u00f3n WEB creada utilizando flask como base, las aplicaciones desarrolladas con flask son compatibles con el estandar wsgi por lo que para instalar Cacao Accounting se requiere: Un servidor WSGI, gunicorn y waitress son las opciones recomendadas. Un servidor web, nginx es la opci\u00f3n recomendada. Un servidor de bases de datos, SQLite , Postgresql , MySQL y MS SQL Server , son oficialmente soportadas. Entorno Virtual de Python Para instalar Cacao Accounting desde las fuentes requiere git , yarn y python . git clone https://github.com/cacao-accounting/cacao-accounting.git cd cacao-accounting python3 -m venv venv # Windows: .\\venv\\Scripts\\activate.bat # Linux y MAC: source venv/bin/activate python -m pip install -r requirements.txt python setup.py install yarn Se puede verificar si la instalaci\u00f3n fue correcta ejecutando: cacaoctl Usage: python -m flask [OPTIONS] COMMAND [ARGS]... Interfaz de linea de comandos para la administraci\u00f3n de Cacao Accounting. Options: --version Show the flask version --help Show this message and exit. Commands: cleandb Elimina la base de datos, solo disponible para... db Perform database migrations. initdb Crea el esquema de la base de datos. routes Show the routes for the app. run Run a development server. serve Inicio la aplicacion con waitress como servidor... shell Run a shell in the app context. Existe una entrada en pypi para el proyecto donde periodicamente se publican los avances del proyecto. Cacao Accounting es software en desarrollo no apto a\u00fan para su uso en producci\u00f3n. Docker Existe una imagen de imagen de contenedor disponible para ejecutar la aplicaci\u00f3n en: https://quay.io/repository/cacaoaccounting/cacaoaccounting En este ejemplo usaremos podman pero los comandos son equivalentes usando moby (docker): podman pull quay.io/cacaoaccounting/cacaoaccounting podman images REPOSITORY TAG IMAGE ID CREATED SIZE docker.io/cacaoaccounting/cacaoaccounting latest a25d0896a2ab 22 hours ago 193 MB podman run -name cacao -d -p 8080:8080 --env CACAO_ACCOUNTING=True --env ENV CACAO_DB=sqlite:///cacaoaccounting.db cacaoaccounting/cacaoaccounting podman ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES e70999f0cd83 docker.io/cacaoaccounting/cacaoaccounting:latest /app/entrypoint.s... 28 seconds ago Up 28 seconds ago 0.0.0.0:8070->8080/tcp cacao Hay una plantilla de docker-compose disponible para apoyar al despliegue de la aplicacion con contenedores. Systemd En sistemas Linux systemd se ha vuelto la implementaci\u00f3n predominante para el arranque del sistema operativo, systemd utiliza archivos .unit para describir los procesos a iniciar en el arranque del sistema operativa. Para su conveniencia proveemos una plantilla de archivo .unit para utilizarla en el despliegue de Cacao Accounting. El archivo .unit se debe colocar en: /etc/systemd/system/cacao-accounting.service Es importante editar las rutas al ejecutable cacaoctl, al aplicaci\u00f3n se puede administrar con: systemctl daemon-reload systemctl enable cacao-accounting.service --now Usando el unit file sin permisos de root Si no tiene acceso de administrador al sistema aun puede utilizar systemd para administrar Cacoa Accounting, debe colocar en archivo .unit en: ~/.config/systemd/user/cacao-accounting.service Puede administrar el servicio con: systemctl --user daemon-reload systemctl --user start cacao-accounting systemctl --user status cacao-accounting \u25cf cacao-accounting.service - Cacao Accounting WSGI server Loaded: loaded (/home/wmoreno/.config/systemd/user/cacao-accounting.service; disabled; vendor preset: disabled) Active: active (running) since Sun 2020-11-01 15:12:52 CST; 5s ago Main PID: 5471 (cacaoctl) Tasks: 5 (limit: 3991) Memory: 44.2M CPU: 656ms CGroup: /user.slice/user-1000.slice/user@1000.service/cacao-accounting.service \u2514\u25005471 /home/wmoreno/Documentos/repositorios/cacao/venv/bin/python /home/wmoreno/Documentos/repositorios/cacao/venv/bin/cacaoctl serve nov 01 15:12:52 thanos systemd[2002]: Started Cacao Accounting WSGI server. nov 01 15:12:53 thanos cacaoctl[5471]: 2020-11-01 15:12:53.798 | INFO | cacao_accounting.__main__:run:34 - Iniciando servidor WSGI en puerto 8080 nov 01 15:12:53 thanos cacaoctl[5471]: 2020-11-01T15:12:53.798290-0600 INFO Iniciando servidor WSGI en puerto 8080 systemctl --user stop cacao-accounting Configurar un servidor web Cacao Accounting utiliza waitress como servidor WSGI, no es recomendable exponer el servidor de aplicaciones directamente a la WEB, waitress puede ser utilizado en redes privadas con pocos usuarios, para servir a un gran n\u00famero de usuarios o utilizar en un servidor p\u00fablico se recomienda utilizar nginx como proxy y para servir contenido estatico a los usuarios.","title":"Instalaci\u00f3n"},{"location":"despliegue/#instalacion","text":"Existen varias formas de desplegar Cacao Accounting, basicamente Cacao Accounting es una aplicaci\u00f3n WEB creada utilizando flask como base, las aplicaciones desarrolladas con flask son compatibles con el estandar wsgi por lo que para instalar Cacao Accounting se requiere: Un servidor WSGI, gunicorn y waitress son las opciones recomendadas. Un servidor web, nginx es la opci\u00f3n recomendada. Un servidor de bases de datos, SQLite , Postgresql , MySQL y MS SQL Server , son oficialmente soportadas.","title":"Instalacion"},{"location":"despliegue/#entorno-virtual-de-python","text":"Para instalar Cacao Accounting desde las fuentes requiere git , yarn y python . git clone https://github.com/cacao-accounting/cacao-accounting.git cd cacao-accounting python3 -m venv venv # Windows: .\\venv\\Scripts\\activate.bat # Linux y MAC: source venv/bin/activate python -m pip install -r requirements.txt python setup.py install yarn Se puede verificar si la instalaci\u00f3n fue correcta ejecutando: cacaoctl Usage: python -m flask [OPTIONS] COMMAND [ARGS]... Interfaz de linea de comandos para la administraci\u00f3n de Cacao Accounting. Options: --version Show the flask version --help Show this message and exit. Commands: cleandb Elimina la base de datos, solo disponible para... db Perform database migrations. initdb Crea el esquema de la base de datos. routes Show the routes for the app. run Run a development server. serve Inicio la aplicacion con waitress como servidor... shell Run a shell in the app context. Existe una entrada en pypi para el proyecto donde periodicamente se publican los avances del proyecto. Cacao Accounting es software en desarrollo no apto a\u00fan para su uso en producci\u00f3n.","title":"Entorno Virtual de Python"},{"location":"despliegue/#docker","text":"Existe una imagen de imagen de contenedor disponible para ejecutar la aplicaci\u00f3n en: https://quay.io/repository/cacaoaccounting/cacaoaccounting En este ejemplo usaremos podman pero los comandos son equivalentes usando moby (docker): podman pull quay.io/cacaoaccounting/cacaoaccounting podman images REPOSITORY TAG IMAGE ID CREATED SIZE docker.io/cacaoaccounting/cacaoaccounting latest a25d0896a2ab 22 hours ago 193 MB podman run -name cacao -d -p 8080:8080 --env CACAO_ACCOUNTING=True --env ENV CACAO_DB=sqlite:///cacaoaccounting.db cacaoaccounting/cacaoaccounting podman ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES e70999f0cd83 docker.io/cacaoaccounting/cacaoaccounting:latest /app/entrypoint.s... 28 seconds ago Up 28 seconds ago 0.0.0.0:8070->8080/tcp cacao Hay una plantilla de docker-compose disponible para apoyar al despliegue de la aplicacion con contenedores.","title":"Docker"},{"location":"despliegue/#systemd","text":"En sistemas Linux systemd se ha vuelto la implementaci\u00f3n predominante para el arranque del sistema operativo, systemd utiliza archivos .unit para describir los procesos a iniciar en el arranque del sistema operativa. Para su conveniencia proveemos una plantilla de archivo .unit para utilizarla en el despliegue de Cacao Accounting. El archivo .unit se debe colocar en: /etc/systemd/system/cacao-accounting.service Es importante editar las rutas al ejecutable cacaoctl, al aplicaci\u00f3n se puede administrar con: systemctl daemon-reload systemctl enable cacao-accounting.service --now","title":"Systemd"},{"location":"despliegue/#usando-el-unit-file-sin-permisos-de-root","text":"Si no tiene acceso de administrador al sistema aun puede utilizar systemd para administrar Cacoa Accounting, debe colocar en archivo .unit en: ~/.config/systemd/user/cacao-accounting.service Puede administrar el servicio con: systemctl --user daemon-reload systemctl --user start cacao-accounting systemctl --user status cacao-accounting \u25cf cacao-accounting.service - Cacao Accounting WSGI server Loaded: loaded (/home/wmoreno/.config/systemd/user/cacao-accounting.service; disabled; vendor preset: disabled) Active: active (running) since Sun 2020-11-01 15:12:52 CST; 5s ago Main PID: 5471 (cacaoctl) Tasks: 5 (limit: 3991) Memory: 44.2M CPU: 656ms CGroup: /user.slice/user-1000.slice/user@1000.service/cacao-accounting.service \u2514\u25005471 /home/wmoreno/Documentos/repositorios/cacao/venv/bin/python /home/wmoreno/Documentos/repositorios/cacao/venv/bin/cacaoctl serve nov 01 15:12:52 thanos systemd[2002]: Started Cacao Accounting WSGI server. nov 01 15:12:53 thanos cacaoctl[5471]: 2020-11-01 15:12:53.798 | INFO | cacao_accounting.__main__:run:34 - Iniciando servidor WSGI en puerto 8080 nov 01 15:12:53 thanos cacaoctl[5471]: 2020-11-01T15:12:53.798290-0600 INFO Iniciando servidor WSGI en puerto 8080 systemctl --user stop cacao-accounting","title":"Usando el unit file sin permisos de root"},{"location":"despliegue/#configurar-un-servidor-web","text":"Cacao Accounting utiliza waitress como servidor WSGI, no es recomendable exponer el servidor de aplicaciones directamente a la WEB, waitress puede ser utilizado en redes privadas con pocos usuarios, para servir a un gran n\u00famero de usuarios o utilizar en un servidor p\u00fablico se recomienda utilizar nginx como proxy y para servir contenido estatico a los usuarios.","title":"Configurar un servidor web"}]}